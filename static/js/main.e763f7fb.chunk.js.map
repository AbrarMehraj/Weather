{"version":3,"sources":["components/SearchBar.js","components/CurrentWeather.js","components/Spinner.js","components/App.js","index.js"],"names":["SearchBar","state","input","onFormSubmit","event","preventDefault","props","onSubmit","setState","className","this","type","placeholder","value","onChange","e","target","React","Component","CurrentWeather","k2C","temp","Math","round","location","alt","src","icon","des","maxTemp","minTemp","pressure","humidity","speed","Spinner","message","defaultProps","App","lat","lon","errMessage","condition","onSearchSubmit","a","axios","get","response","addToState","data","search","console","log","res","name","weather","main","temp_max","temp_min","wind","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","style","color","padding","maxWidth","margin","renderContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e763f7fb.chunk.js","sourcesContent":["import './SearchBar.css';\r\nimport React from 'react';\r\n\r\n\r\n\r\nclass SearchBar extends React.Component{\r\n   state = {input: ''};\r\n\r\n    onFormSubmit = (event) =>{\r\n      event.preventDefault();\r\n      \r\n      this.props.onSubmit(this.state.input);\r\n      this.setState({input: ''});\r\n   };\r\n\r\n   render(){\r\n      return (\r\n         <div className=\"header\" >\r\n            <form className=\"search\"  onSubmit={this.onFormSubmit}>\r\n               <button className=\"search__button\">\r\n                   <i className=\"search icon\"></i>\r\n               </button>\r\n               <input type=\"text\" className=\"search__input\"\r\n                  placeholder=\"Search Location\"\r\n                  value={this.state.input} \r\n                  onChange={e=> this.setState({input: e.target.value})}\r\n                  \r\n                   />\r\n                  \r\n            </form>\r\n            <div className=\"title\">K-Weather</div>\r\n        </div>\r\n      ) ;\r\n   }\r\n\r\n}\r\n\r\nexport default SearchBar;","import './CurrentWeather.css';\r\nimport React from 'react';\r\n\r\n\r\nconst CurrentWeather = (props) => {\r\n\r\n   const k2C = (temp)=>{ \r\n\r\n      if(temp != null){ \r\n         return Math.round(temp - 272.3);\r\n      }\r\n   };\r\n\r\n  \r\n  \r\n   \r\n   return(\r\n      <div className=\"w-wrapper\">\r\n      \r\n         <div className=\"w-header\">\r\n            <h2 className=\"w-location\"><i className=\"tiny location arrow icon\"></i> {props.location}</h2>\r\n            <img  alt='Loading error' src={props.icon} className= \"w-icon\" />\r\n            <h3 className = \"w-desc\">{props.des}</h3>\r\n            <h2 className = \"w-temp\">{k2C(props.temp)} °C</h2>\r\n            <div className=\"temp\">\r\n               <div className = \"temp-min\"><i className=\"long arrow alternate up icon\"></i> {k2C(props.maxTemp)} °C</div>\r\n               <div className = \"temp-max\"><i className=\"long arrow alternate down icon\"></i> {k2C(props.minTemp)} °C</div>\r\n            </div>\r\n         </div>\r\n      \r\n         <div className=\"w-bottom\">\r\n            <div className=\"w-pressure\">Pressure {props.pressure} hps</div>\r\n            <div className=\"w-pre\">Humidity {props.humidity } %</div>\r\n            <div className=\"w-speed\">Speed {props.speed} m/s</div>\r\n         </div>\r\n     </div>\r\n   );\r\n}\r\n\r\nexport   default CurrentWeather; ","import React from 'react';\r\n\r\nconst Spinner = props => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">{props.message}</div>\r\n        </div>\r\n\r\n        \r\n        \r\n    );\r\n}\r\n\r\n\r\nSpinner.defaultProps = {\r\n    message : 'Loading...'\r\n}\r\n\r\n\r\nexport default Spinner;","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport Spinner from './Spinner';\r\n\r\n\r\nclass App extends React.Component{\r\n   //State \r\n   state = {\r\n      lat: null,\r\n      lon: null,\r\n      location: '',\r\n      icon: '',\r\n      temp: null,\r\n      des: '',\r\n      maxTemp: null,\r\n      minTemp: null,\r\n      pressure: null,\r\n      humidity: null,\r\n      speed: null,\r\n      errMessage : '',\r\n      condition: null\r\n   };\r\n\r\n\r\n   //  Api request to the openweathermap\r\n   onSearchSubmit = async (input) =>{\r\n      const apiKey = 'ee562214bd7a53e65252f59d99738075';\r\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=${apiKey}`);\r\n      \r\n      // console.log(response.data);\r\n      this.addToState(response.data);\r\n\r\n      if(input){\r\n        return  (\r\n         <div> \r\n            <Spinner message='pakaan' />\r\n         </div>\r\n        );\r\n      }\r\n     \r\n   }\r\n\r\n   // Helper function\r\n   addToState(res){\r\n      this.setState({ \r\n         location: res.name,\r\n         icon: res.weather[0].icon,\r\n         des: res.weather[0].main,\r\n         temp: res.main.temp,\r\n         maxTemp: res.main.temp_max,\r\n         minTemp: res.main.temp_min,\r\n         pressure: res.main.pressure,\r\n         humidity: res.main.humidity,\r\n         speed: res.wind.speed\r\n       });\r\n   }\r\n\r\n\r\n   // Search Automatically\r\n   search = async () =>{\r\n      const apiKey = 'ee562214bd7a53e65252f59d99738075';\r\n\r\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=${apiKey}`);\r\n\r\n      console.log(response);\r\n\r\n      this.addToState(response.data);\r\n   }\r\n\r\n\r\n  componentDidMount(){\r\n     window.navigator.geolocation.getCurrentPosition(\r\n        position =>{\r\n\r\n         this.setState({\r\n            condition: 1,\r\n            lat : position.coords.latitude,\r\n            lon : position.coords.longitude\r\n         });\r\n\r\n         this.search();\r\n\r\n     },\r\n     err =>{\r\n         this.setState({errMessage: err.message});\r\n     }\r\n     )\r\n  }\r\n\r\n\r\n  // Render content condition's\r\n   renderContent(){\r\n      if(this.state.errMessage && !this.state.location){\r\n         return (\r\n            <div style={{color: 'white' , padding: '2rem'}}>\r\n               <h3>Error: {this.state.errMessage}</h3>\r\n               <h4>Now Search it Manually</h4>\r\n            </div>\r\n         );   \r\n      }\r\n\r\n      if(this.state.condition === 1 && !this.state.location){\r\n        return <Spinner message = 'Fetching data...' />\r\n      }\r\n\r\n\r\n     \r\n\r\n      if(this.state.location !== ''){   \r\n         return (\r\n            <CurrentWeather \r\n            style={{ maxWidth:'700px', margin:'auto', position: 'relative'}}\r\n            location ={this.state.location}\r\n            icon = {`http://openweathermap.org/img/wn/${this.state.icon}@2x.png`}\r\n            temp = {this.state.temp}\r\n            des = {this.state.des}\r\n            maxTemp = {this.state.maxTemp}\r\n            minTemp = {this.state.minTemp}\r\n            pressure = {this.state.pressure}\r\n            humidity = {this.state.humidity}\r\n            speed = {this.state.speed} />\r\n\r\n         )\r\n      }\r\n      \r\n      return <Spinner message='Please accept the request location...' />\r\n   };\r\n\r\n\r\n   // button methods\r\n  \r\n   // CTF = () => {\r\n   //    // return(\r\n       \r\n   //    // );\r\n   // }\r\n\r\n   // CTC = () => {\r\n   //    const UpdatedTemp = Math.round(\r\n   //       this.state.temp - 272.3,\r\n   //       this.state.minTemp - 272.3);\r\n   //    this.setState({temp: UpdatedTemp, minTemp: UpdatedTemp})\r\n\r\n   // }\r\n\r\n\r\n\r\n   // buttons(){\r\n   //    return (\r\n   //       <div >\r\n   //          <button className=\"btn fahren\" onClick={this.CTF} >F</button>\r\n   //          <button className=\"btn celcius\" onClick={this.CTC} >C</button>\r\n   //       </div>\r\n   //    )\r\n   // }\r\n\r\n\r\n\r\n   render(){\r\n      return (\r\n         <div style={{ maxWidth:'700px',\r\n             margin:'auto'}}>\r\n            <SearchBar onSubmit={this.onSearchSubmit} />\r\n            {this.renderContent()}\r\n            {/* {this.buttons()} */}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}