{"version":3,"sources":["components/SearchBar.js","components/CurrentWeather.js","components/Spinner.js","components/App.js","index.js"],"names":["SearchBar","state","input","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","placeholder","value","onChange","e","setState","target","React","Component","CurrentWeather","k2C","temp","Math","round","location","alt","src","icon","des","maxTemp","minTemp","pressure","humidity","speed","Spinner","message","defaultProps","App","lat","lon","errMessage","onSearchSubmit","a","axios","get","response","console","log","data","addToState","search","res","name","weather","main","temp_max","temp_min","wind","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","style","color","padding","maxWidth","margin","renderContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4687be57.chunk.js","sourcesContent":["import './SearchBar.css';\r\nimport React from 'react';\r\n\r\n\r\n\r\nclass SearchBar extends React.Component{\r\n   state = {input: ''};\r\n\r\n    onFormSubmit = (event) =>{\r\n      event.preventDefault();\r\n      \r\n      this.props.onSubmit(this.state.input);\r\n      \r\n   };\r\n\r\n   render(){\r\n      return (\r\n         <div className=\"header\" >\r\n            <form className=\"search\"  onSubmit={this.onFormSubmit}>\r\n               <button className=\"search__button\">\r\n                   <i className=\"search icon\"></i>\r\n               </button>\r\n               <input type=\"text\" className=\"search__input\"\r\n                  placeholder=\"Search Location\"\r\n                  value={this.state.input} \r\n                  onChange={e=> this.setState({input: e.target.value})}\r\n                  \r\n                   />\r\n                  \r\n            </form>\r\n            <div className=\"title\">K-Weather</div>\r\n        </div>\r\n      ) ;\r\n   }\r\n\r\n}\r\n\r\nexport default SearchBar;","import './CurrentWeather.css';\r\nimport React from 'react';\r\n\r\n\r\nconst CurrentWeather = (props) => {\r\n\r\n   const k2C = (temp)=>{ \r\n\r\n      if(temp != null){ \r\n         return Math.round(temp - 272.3);\r\n      }\r\n   }\r\n   \r\n   \r\n   return(\r\n      <div className=\"w-wrapper\">\r\n         <div className=\"w-header\">\r\n            <h2 className=\"w-location\"><i className=\"tiny location arrow icon\"></i> {props.location}</h2>\r\n            <img  alt='Loading error' src={props.icon} className= \"w-icon\" />\r\n            <h3 className = \"w-desc\">{props.des}</h3>\r\n            <h2 className = \"w-temp\">{k2C(props.temp)} °C</h2>\r\n            <div className=\"temp\">\r\n               <div className = \"temp-min\"><i className=\"long arrow alternate up icon\"></i> {k2C(props.maxTemp)} °C</div>\r\n               <div className = \"temp-max\"><i className=\"long arrow alternate down icon\"></i> {k2C(props.minTemp)} °C</div>\r\n            </div>\r\n         </div>\r\n      \r\n         <div className=\"w-bottom\">\r\n            <div className=\"w-pressure\">Pressure {props.pressure} hps</div>\r\n            <div className=\"w-pre\">Humidity {props.humidity } %</div>\r\n            <div className=\"w-speed\">Speed {props.speed} m/s</div>\r\n         </div>\r\n     </div>\r\n   );\r\n}\r\n\r\nexport   default CurrentWeather; ","import React from 'react';\r\n\r\nconst Spinner = props => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">{props.message}</div>\r\n        </div>\r\n\r\n        \r\n        \r\n    );\r\n}\r\n\r\n\r\nSpinner.defaultProps = {\r\n    message : 'Loading...'\r\n}\r\n\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport Spinner from './Spinner';\r\nimport Faker from 'faker';\r\n\r\n\r\nclass App extends React.Component{\r\n   //State \r\n   state = {\r\n      lat: null,\r\n      lon: null,\r\n      location: '',\r\n      icon: '',\r\n      temp: null,\r\n      des: '',\r\n      maxTemp: null,\r\n      minTemp: null,\r\n      pressure: null,\r\n      humidity: null,\r\n      speed: null,\r\n      errMessage : ''\r\n   };\r\n\r\n\r\n   //  Api request to the openweathermap\r\n   onSearchSubmit = async (input) =>{\r\n      const apiKey = 'ee562214bd7a53e65252f59d99738075';\r\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=${apiKey}`);\r\n      \r\n      console.log(response.data);\r\n      this.addToState(response.data);\r\n     \r\n   }\r\n\r\n   // Helper function\r\n   addToState(res){\r\n      this.setState({ \r\n         location: res.name,\r\n         icon: res.weather[0].icon,\r\n         des: res.weather[0].main,\r\n         temp: res.main.temp,\r\n         maxTemp: res.main.temp_max,\r\n         minTemp: res.main.temp_min,\r\n         pressure: res.main.pressure,\r\n         humidity: res.main.humidity,\r\n         speed: res.wind.speed\r\n       });\r\n   }\r\n\r\n\r\n   // Search Automatically\r\n   search = async () =>{\r\n      const apiKey = 'ee562214bd7a53e65252f59d99738075';\r\n\r\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=${apiKey}`);\r\n\r\n      console.log(response);\r\n\r\n      this.addToState(response.data);\r\n   }\r\n\r\n\r\n  componentDidMount(){\r\n     window.navigator.geolocation.getCurrentPosition(\r\n        position =>{\r\n\r\n         this.setState({\r\n            lat : position.coords.latitude,\r\n            lon : position.coords.longitude\r\n         });\r\n\r\n         this.search();\r\n\r\n     },\r\n     err =>{\r\n         this.setState({errMessage: err.message});\r\n     }\r\n     )\r\n  }\r\n\r\n\r\n  // Render content condition's\r\n   renderContent(){\r\n      if(this.state.errMessage && !this.state.location){\r\n         return (\r\n            <div style={{color: 'white' , padding: '2rem'}}>\r\n               <h3>Error: {this.state.errMessage}</h3>\r\n               <h4>Now Search it Manually</h4>\r\n            </div>\r\n         );   \r\n      }\r\n\r\n   \r\n      if(this.state.location !== ''){\r\n         var iconCode = this.state.icon;\r\n         return (\r\n            <CurrentWeather \r\n            location ={this.state.location}\r\n            icon = {`http://openweathermap.org/img/wn/${this.state.icon}@2x.png`}\r\n            temp = {this.state.temp}\r\n            des = {this.state.des}\r\n            maxTemp = {this.state.maxTemp}\r\n            minTemp = {this.state.minTemp}\r\n            pressure = {this.state.pressure}\r\n            humidity = {this.state.humidity}\r\n            speed = {this.state.speed} />\r\n         )\r\n      }\r\n      \r\n      return <Spinner message='Please accept the request location...' />\r\n   };\r\n\r\n\r\n   render(){\r\n      return (\r\n         <div style={{ maxWidth:'700px', margin:'auto'}}>\r\n            <SearchBar onSubmit={this.onSearchSubmit} />\r\n            {this.renderContent()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}